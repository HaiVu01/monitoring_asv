/* Setting the margin for the text_bar class and making it respect the border and padding for box size calculations. */
.text_bar {
  margin: 20px 0px 20px 0px;
  box-sizing: content-box;
}

/* Styling for grid layout for responsive design in .col-lg-4 class within a .row class. */
.row .col-lg-4 {
  margin: 0;
  padding: 0;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Styling for grid layout for responsive design in .col-lg-8 class within a .row class. */
.row .col-lg-8 {
  margin: 0;
  padding: 0;
}

/* Adding a double border with a border-radius to the openMap class. */
.openMap {
  border: 15px;
  box-sizing: content-box;
  border-style: double;
  border-radius: 5px;
}

/* Defining the wrapper class for flex properties and setting its size. */
.wrapper {
  width: 800px;
  height: 100%;
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: space-between;
}

/* Styling the card class within the wrapper class to display sensor data. */
.wrapper .card {
  background: #fff;
  width: calc(50% - 20px);
  height: calc(50% - 10px);
  margin: 0px 10px 10px 10px;
  border-radius: 5px;
  display: flex;
  align-items: center;
  justify-content: space-evenly;
  flex-direction: column;
  box-shadow: 0px 10px 15px rgba(0, 0, 0, 0.1);
}

/* Setting the circle class within the card class for showing progress bars. */
.wrapper .card .circle {
  position: relative;
  height: 150px;
  width: 150px;
  border-radius: 50%;
  cursor: default;
  margin-top: 5px;
}

/* More stylings for circle class and its child elements. */
.card .circle .box,
.card .circle .box span {
  position: absolute;
  top: 50%;
  left: 50%;
}

/* Styling for the box class within the circle class. */
.card .circle .box {
  height: 100%;
  width: 100%;
  background: #fff;
  border-radius: 50%;
  transform: translate(-50%, -50%) scale(0.6);
  transition: all 0.2s;
}

/* Add a hover effect for the box within the circle. */
.card .circle:hover .box {
  transform: translate(-50%, -50%) scale(0.91);
}

/* Styling for the text within the box and card. */
.card .circle .box span,
.wrapper .card .text {
  background: black;
  -webkit-background-clip: text;
  -moz-background-clip: text;
  background-clip: text;
  color: transparent;
}

/* More styling for text within the circle. */
.circle .box span {
  font-size: 38px;
  font-family: sans-serif;
  font-weight: 600;
  transform: translate(-45%, -45%);
  transition: all 0.1s;
}

/* Add a hover effect for the text within the circle. */
.card .circle:hover .box span {
  transform: translate(-45%, -45%) scale(0.8);
}

/* Styling for the text class within the card. */
.card .text {
  font-size: 20px;
  font-weight: 600;
}

/* Remove default margin and padding from body and html, and set their heights and widths to 100%. */
html,
body {
  height: 100%;
  width: 100%;
  margin: 0;
  padding: 0;
}

/* Define the map size to cover entire area. */
#map {
  height: 100%;
  width: 100%;
}

/* Style the content-wrapper to create a flexible layout for the main-content area. */
.content-wrapper {
  display: flex;
  flex-direction: column;
  min-height: 100%;
}

/* Make the main content take all the available space. */
.main-content {
  flex-grow: 1;
}

/* Style the map-container to ensure it has a minimum height and to add a double border with a border-radius. */
.map-container {
  height: 100%;
  min-height: 700px;
  border: 15px;
  border-style: double;
  border-radius: 5px;
}

/* Style the center-button to make it stand out and appear clickable. */
.center-button {
  background-color: white;
  border: 1px solid rgba(0, 0, 0, 0.4);
  border-radius: 4px;
  cursor: pointer;
  font-size: 14px;
  padding: 4px 8px;
}

/* Style the leaflet-control-custom to make it look consistent and appealing. */
.leaflet-control-custom {
  background-color: white;
  border: 1px solid rgba(0, 0, 0, 0.4);
  border-radius: 4px;
  cursor: pointer;
  font-size: 14px;
  width: 36px;
  height: 36px;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Set the color for the leaflet-control-custom icons. */
.leaflet-control-custom i {
  color: #333;
}
